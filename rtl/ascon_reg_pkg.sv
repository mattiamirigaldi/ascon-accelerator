// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package ascon_reg_pkg;

  // Address widths within the block
  parameter int BlockAw = 6;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {logic q;} ascon_reg2hw_status_reg_t;

  typedef struct packed {logic [31:0] q;} ascon_reg2hw_state_mreg_t;

  typedef struct packed {
    logic d;
    logic de;
  } ascon_hw2reg_status_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } ascon_hw2reg_state_mreg_t;

  // Regs read from HW : Register -> HW type
  typedef struct packed {
    ascon_reg2hw_status_reg_t status;  // [320:320] 1 bit
    ascon_reg2hw_state_mreg_t [9:0] state;  // [319:0] 10×32 bits
  } ascon_reg2hw_t;

  // Regs written by HW : HW -> register type
  typedef struct packed {
    ascon_hw2reg_status_reg_t status;  // [331:330] 2 bits (d+de)
    ascon_hw2reg_state_mreg_t [9:0] state;  // [329:0] 10×33 bits (d+de each)
  } ascon_hw2reg_t;


  // Register offsets
  parameter logic [BlockAw-1:0] ASCON_STATUS_OFFSET = 6'h0;
  parameter logic [BlockAw-1:0] ASCON_STATE_0_OFFSET = 6'h4;
  parameter logic [BlockAw-1:0] ASCON_STATE_1_OFFSET = 6'h8;
  parameter logic [BlockAw-1:0] ASCON_STATE_2_OFFSET = 6'hc;
  parameter logic [BlockAw-1:0] ASCON_STATE_3_OFFSET = 6'h10;
  parameter logic [BlockAw-1:0] ASCON_STATE_4_OFFSET = 6'h14;
  parameter logic [BlockAw-1:0] ASCON_STATE_5_OFFSET = 6'h18;
  parameter logic [BlockAw-1:0] ASCON_STATE_6_OFFSET = 6'h1c;
  parameter logic [BlockAw-1:0] ASCON_STATE_7_OFFSET = 6'h20;
  parameter logic [BlockAw-1:0] ASCON_STATE_8_OFFSET = 6'h24;
  parameter logic [BlockAw-1:0] ASCON_STATE_9_OFFSET = 6'h28;

  // Register index
  typedef enum int {
    ASCON_STATUS,
    ASCON_STATE_0,
    ASCON_STATE_1,
    ASCON_STATE_2,
    ASCON_STATE_3,
    ASCON_STATE_4,
    ASCON_STATE_5,
    ASCON_STATE_6,
    ASCON_STATE_7,
    ASCON_STATE_8,
    ASCON_STATE_9
  } ascon_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] ASCON_PERMIT[11] = '{
      4'b0001,  // index[ 0] ASCON_STATUS
      4'b1111,  // index[ 1] ASCON_STATE_0
      4'b1111,  // index[ 2] ASCON_STATE_1
      4'b1111,  // index[ 3] ASCON_STATE_2
      4'b1111,  // index[ 4] ASCON_STATE_3
      4'b1111,  // index[ 5] ASCON_STATE_4
      4'b1111,  // index[ 6] ASCON_STATE_5
      4'b1111,  // index[ 7] ASCON_STATE_6
      4'b1111,  // index[ 8] ASCON_STATE_7
      4'b1111,  // index[ 9] ASCON_STATE_8
      4'b1111  // index[10] ASCON_STATE_9
  };

endpackage

