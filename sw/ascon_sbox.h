// Generated register defines for ascon_sbox

#ifndef _ASCON_SBOX_REG_DEFS_
#define _ASCON_SBOX_REG_DEFS_

#ifdef __cplusplus
extern "C" {
#endif
// Register width
#define ASCON_SBOX_PARAM_REG_WIDTH 32

// Sbox for Ascon (common parameters)
// Sbox for Ascon
#define ASCON_SBOX_SBOX_0_REG_OFFSET 0x0
#define ASCON_SBOX_SBOX_0_ENTRY_0_0_MASK 0x1f
#define ASCON_SBOX_SBOX_0_ENTRY_0_0_OFFSET 0
#define ASCON_SBOX_SBOX_0_ENTRY_0_0_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_0_ENTRY_0_0_MASK, .index = ASCON_SBOX_SBOX_0_ENTRY_0_0_OFFSET })
#define ASCON_SBOX_SBOX_0_ENTRY_1_0_MASK 0x1f
#define ASCON_SBOX_SBOX_0_ENTRY_1_0_OFFSET 5
#define ASCON_SBOX_SBOX_0_ENTRY_1_0_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_0_ENTRY_1_0_MASK, .index = ASCON_SBOX_SBOX_0_ENTRY_1_0_OFFSET })
#define ASCON_SBOX_SBOX_0_ENTRY_2_0_MASK 0x1f
#define ASCON_SBOX_SBOX_0_ENTRY_2_0_OFFSET 10
#define ASCON_SBOX_SBOX_0_ENTRY_2_0_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_0_ENTRY_2_0_MASK, .index = ASCON_SBOX_SBOX_0_ENTRY_2_0_OFFSET })
#define ASCON_SBOX_SBOX_0_ENTRY_3_0_MASK 0x1f
#define ASCON_SBOX_SBOX_0_ENTRY_3_0_OFFSET 15
#define ASCON_SBOX_SBOX_0_ENTRY_3_0_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_0_ENTRY_3_0_MASK, .index = ASCON_SBOX_SBOX_0_ENTRY_3_0_OFFSET })

// Sbox for Ascon
#define ASCON_SBOX_SBOX_1_REG_OFFSET 0x4
#define ASCON_SBOX_SBOX_1_ENTRY_0_1_MASK 0x1f
#define ASCON_SBOX_SBOX_1_ENTRY_0_1_OFFSET 0
#define ASCON_SBOX_SBOX_1_ENTRY_0_1_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_1_ENTRY_0_1_MASK, .index = ASCON_SBOX_SBOX_1_ENTRY_0_1_OFFSET })
#define ASCON_SBOX_SBOX_1_ENTRY_1_1_MASK 0x1f
#define ASCON_SBOX_SBOX_1_ENTRY_1_1_OFFSET 5
#define ASCON_SBOX_SBOX_1_ENTRY_1_1_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_1_ENTRY_1_1_MASK, .index = ASCON_SBOX_SBOX_1_ENTRY_1_1_OFFSET })
#define ASCON_SBOX_SBOX_1_ENTRY_2_1_MASK 0x1f
#define ASCON_SBOX_SBOX_1_ENTRY_2_1_OFFSET 10
#define ASCON_SBOX_SBOX_1_ENTRY_2_1_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_1_ENTRY_2_1_MASK, .index = ASCON_SBOX_SBOX_1_ENTRY_2_1_OFFSET })
#define ASCON_SBOX_SBOX_1_ENTRY_3_1_MASK 0x1f
#define ASCON_SBOX_SBOX_1_ENTRY_3_1_OFFSET 15
#define ASCON_SBOX_SBOX_1_ENTRY_3_1_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_1_ENTRY_3_1_MASK, .index = ASCON_SBOX_SBOX_1_ENTRY_3_1_OFFSET })

// Sbox for Ascon
#define ASCON_SBOX_SBOX_2_REG_OFFSET 0x8
#define ASCON_SBOX_SBOX_2_ENTRY_0_2_MASK 0x1f
#define ASCON_SBOX_SBOX_2_ENTRY_0_2_OFFSET 0
#define ASCON_SBOX_SBOX_2_ENTRY_0_2_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_2_ENTRY_0_2_MASK, .index = ASCON_SBOX_SBOX_2_ENTRY_0_2_OFFSET })
#define ASCON_SBOX_SBOX_2_ENTRY_1_2_MASK 0x1f
#define ASCON_SBOX_SBOX_2_ENTRY_1_2_OFFSET 5
#define ASCON_SBOX_SBOX_2_ENTRY_1_2_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_2_ENTRY_1_2_MASK, .index = ASCON_SBOX_SBOX_2_ENTRY_1_2_OFFSET })
#define ASCON_SBOX_SBOX_2_ENTRY_2_2_MASK 0x1f
#define ASCON_SBOX_SBOX_2_ENTRY_2_2_OFFSET 10
#define ASCON_SBOX_SBOX_2_ENTRY_2_2_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_2_ENTRY_2_2_MASK, .index = ASCON_SBOX_SBOX_2_ENTRY_2_2_OFFSET })
#define ASCON_SBOX_SBOX_2_ENTRY_3_2_MASK 0x1f
#define ASCON_SBOX_SBOX_2_ENTRY_3_2_OFFSET 15
#define ASCON_SBOX_SBOX_2_ENTRY_3_2_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_2_ENTRY_3_2_MASK, .index = ASCON_SBOX_SBOX_2_ENTRY_3_2_OFFSET })

// Sbox for Ascon
#define ASCON_SBOX_SBOX_3_REG_OFFSET 0xc
#define ASCON_SBOX_SBOX_3_ENTRY_0_3_MASK 0x1f
#define ASCON_SBOX_SBOX_3_ENTRY_0_3_OFFSET 0
#define ASCON_SBOX_SBOX_3_ENTRY_0_3_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_3_ENTRY_0_3_MASK, .index = ASCON_SBOX_SBOX_3_ENTRY_0_3_OFFSET })
#define ASCON_SBOX_SBOX_3_ENTRY_1_3_MASK 0x1f
#define ASCON_SBOX_SBOX_3_ENTRY_1_3_OFFSET 5
#define ASCON_SBOX_SBOX_3_ENTRY_1_3_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_3_ENTRY_1_3_MASK, .index = ASCON_SBOX_SBOX_3_ENTRY_1_3_OFFSET })
#define ASCON_SBOX_SBOX_3_ENTRY_2_3_MASK 0x1f
#define ASCON_SBOX_SBOX_3_ENTRY_2_3_OFFSET 10
#define ASCON_SBOX_SBOX_3_ENTRY_2_3_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_3_ENTRY_2_3_MASK, .index = ASCON_SBOX_SBOX_3_ENTRY_2_3_OFFSET })
#define ASCON_SBOX_SBOX_3_ENTRY_3_3_MASK 0x1f
#define ASCON_SBOX_SBOX_3_ENTRY_3_3_OFFSET 15
#define ASCON_SBOX_SBOX_3_ENTRY_3_3_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_3_ENTRY_3_3_MASK, .index = ASCON_SBOX_SBOX_3_ENTRY_3_3_OFFSET })

// Sbox for Ascon
#define ASCON_SBOX_SBOX_4_REG_OFFSET 0x10
#define ASCON_SBOX_SBOX_4_ENTRY_0_4_MASK 0x1f
#define ASCON_SBOX_SBOX_4_ENTRY_0_4_OFFSET 0
#define ASCON_SBOX_SBOX_4_ENTRY_0_4_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_4_ENTRY_0_4_MASK, .index = ASCON_SBOX_SBOX_4_ENTRY_0_4_OFFSET })
#define ASCON_SBOX_SBOX_4_ENTRY_1_4_MASK 0x1f
#define ASCON_SBOX_SBOX_4_ENTRY_1_4_OFFSET 5
#define ASCON_SBOX_SBOX_4_ENTRY_1_4_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_4_ENTRY_1_4_MASK, .index = ASCON_SBOX_SBOX_4_ENTRY_1_4_OFFSET })
#define ASCON_SBOX_SBOX_4_ENTRY_2_4_MASK 0x1f
#define ASCON_SBOX_SBOX_4_ENTRY_2_4_OFFSET 10
#define ASCON_SBOX_SBOX_4_ENTRY_2_4_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_4_ENTRY_2_4_MASK, .index = ASCON_SBOX_SBOX_4_ENTRY_2_4_OFFSET })
#define ASCON_SBOX_SBOX_4_ENTRY_3_4_MASK 0x1f
#define ASCON_SBOX_SBOX_4_ENTRY_3_4_OFFSET 15
#define ASCON_SBOX_SBOX_4_ENTRY_3_4_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_4_ENTRY_3_4_MASK, .index = ASCON_SBOX_SBOX_4_ENTRY_3_4_OFFSET })

// Sbox for Ascon
#define ASCON_SBOX_SBOX_5_REG_OFFSET 0x14
#define ASCON_SBOX_SBOX_5_ENTRY_0_5_MASK 0x1f
#define ASCON_SBOX_SBOX_5_ENTRY_0_5_OFFSET 0
#define ASCON_SBOX_SBOX_5_ENTRY_0_5_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_5_ENTRY_0_5_MASK, .index = ASCON_SBOX_SBOX_5_ENTRY_0_5_OFFSET })
#define ASCON_SBOX_SBOX_5_ENTRY_1_5_MASK 0x1f
#define ASCON_SBOX_SBOX_5_ENTRY_1_5_OFFSET 5
#define ASCON_SBOX_SBOX_5_ENTRY_1_5_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_5_ENTRY_1_5_MASK, .index = ASCON_SBOX_SBOX_5_ENTRY_1_5_OFFSET })
#define ASCON_SBOX_SBOX_5_ENTRY_2_5_MASK 0x1f
#define ASCON_SBOX_SBOX_5_ENTRY_2_5_OFFSET 10
#define ASCON_SBOX_SBOX_5_ENTRY_2_5_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_5_ENTRY_2_5_MASK, .index = ASCON_SBOX_SBOX_5_ENTRY_2_5_OFFSET })
#define ASCON_SBOX_SBOX_5_ENTRY_3_5_MASK 0x1f
#define ASCON_SBOX_SBOX_5_ENTRY_3_5_OFFSET 15
#define ASCON_SBOX_SBOX_5_ENTRY_3_5_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_5_ENTRY_3_5_MASK, .index = ASCON_SBOX_SBOX_5_ENTRY_3_5_OFFSET })

// Sbox for Ascon
#define ASCON_SBOX_SBOX_6_REG_OFFSET 0x18
#define ASCON_SBOX_SBOX_6_ENTRY_0_6_MASK 0x1f
#define ASCON_SBOX_SBOX_6_ENTRY_0_6_OFFSET 0
#define ASCON_SBOX_SBOX_6_ENTRY_0_6_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_6_ENTRY_0_6_MASK, .index = ASCON_SBOX_SBOX_6_ENTRY_0_6_OFFSET })
#define ASCON_SBOX_SBOX_6_ENTRY_1_6_MASK 0x1f
#define ASCON_SBOX_SBOX_6_ENTRY_1_6_OFFSET 5
#define ASCON_SBOX_SBOX_6_ENTRY_1_6_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_6_ENTRY_1_6_MASK, .index = ASCON_SBOX_SBOX_6_ENTRY_1_6_OFFSET })
#define ASCON_SBOX_SBOX_6_ENTRY_2_6_MASK 0x1f
#define ASCON_SBOX_SBOX_6_ENTRY_2_6_OFFSET 10
#define ASCON_SBOX_SBOX_6_ENTRY_2_6_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_6_ENTRY_2_6_MASK, .index = ASCON_SBOX_SBOX_6_ENTRY_2_6_OFFSET })
#define ASCON_SBOX_SBOX_6_ENTRY_3_6_MASK 0x1f
#define ASCON_SBOX_SBOX_6_ENTRY_3_6_OFFSET 15
#define ASCON_SBOX_SBOX_6_ENTRY_3_6_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_6_ENTRY_3_6_MASK, .index = ASCON_SBOX_SBOX_6_ENTRY_3_6_OFFSET })

// Sbox for Ascon
#define ASCON_SBOX_SBOX_7_REG_OFFSET 0x1c
#define ASCON_SBOX_SBOX_7_ENTRY_0_7_MASK 0x1f
#define ASCON_SBOX_SBOX_7_ENTRY_0_7_OFFSET 0
#define ASCON_SBOX_SBOX_7_ENTRY_0_7_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_7_ENTRY_0_7_MASK, .index = ASCON_SBOX_SBOX_7_ENTRY_0_7_OFFSET })
#define ASCON_SBOX_SBOX_7_ENTRY_1_7_MASK 0x1f
#define ASCON_SBOX_SBOX_7_ENTRY_1_7_OFFSET 5
#define ASCON_SBOX_SBOX_7_ENTRY_1_7_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_7_ENTRY_1_7_MASK, .index = ASCON_SBOX_SBOX_7_ENTRY_1_7_OFFSET })
#define ASCON_SBOX_SBOX_7_ENTRY_2_7_MASK 0x1f
#define ASCON_SBOX_SBOX_7_ENTRY_2_7_OFFSET 10
#define ASCON_SBOX_SBOX_7_ENTRY_2_7_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_7_ENTRY_2_7_MASK, .index = ASCON_SBOX_SBOX_7_ENTRY_2_7_OFFSET })
#define ASCON_SBOX_SBOX_7_ENTRY_3_7_MASK 0x1f
#define ASCON_SBOX_SBOX_7_ENTRY_3_7_OFFSET 15
#define ASCON_SBOX_SBOX_7_ENTRY_3_7_FIELD \
  ((bitfield_field32_t) { .mask = ASCON_SBOX_SBOX_7_ENTRY_3_7_MASK, .index = ASCON_SBOX_SBOX_7_ENTRY_3_7_OFFSET })

#ifdef __cplusplus
}  // extern "C"
#endif
#endif  // _ASCON_SBOX_REG_DEFS_
// End generated register defines for ascon_sbox